name: Build and Release Telegram Account Converter

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    name: Build and Release for macOS & Windows
    runs-on: ubuntu-latest
    permissions:
      contents: write

    strategy:
      matrix:
        platform: [macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install PyInstaller
        run: |
          pip install pyinstaller

      - name: Detect Platform
        id: os
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "::set-output name=platform::mac"
            echo "::set-output name=ext::.app"
            echo "::set-output name=spec_flags::--windowed"
          else
            echo "::set-output name=platform::win"
            echo "::set-output name=ext::.exe"
            echo "::set-output name=spec_flags::--onefile"
          fi

      - name: Clean old builds
        run: |
          rm -rf dist build *.spec TelegramAccountConverter${{ steps.os.outputs.ext }}

      - name: Build Executable
        run: |
          pyinstaller \
            --name=TelegramAccountConverter \
            ${{ steps.os.outputs.spec_flags }} \
            --add-data="gui.py:." \
            --add-data="converter.py:." \
            main.py

      - name: Package to ZIP
        run: |
          ZIP_NAME="TelegramAccountConverter-${{ steps.os.outputs.platform }}-$(date +'%Y%m%d')"
          mkdir -p "$ZIP_NAME"
          cp -R dist/TelegramAccountConverter${{ steps.os.outputs.ext }} "$ZIP_NAME/"
          zip -r "${ZIP_NAME}.zip" "$ZIP_NAME"

      - name: Set Version
        id: version
        run: echo "::set-output name=value::v1.0.0"

      - name: Create or Get Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.value }}
          release_name: Release ${{ steps.version.value }}
          draft: false
          prerelease: false

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: TelegramAccountConverter-${{ steps.os.outputs.platform }}-*.zip
          asset_name: TelegramAccountConverter-${{ steps.os.outputs.platform }}-$(date +'%Y%m%d').zip
          asset_content_type: application/zip